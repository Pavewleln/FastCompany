{"version":3,"sources":["reportWebVitals.js","app/utils/validator.js","app/components/common/form/textField.jsx","app/components/common/form/selectField.jsx","app/components/common/form/radioField.jsx","app/components/common/form/multiSelectField.jsx","app/components/common/backButton.jsx","app/services/localStorage.service.js","app/services/auth.service.js","app/services/http.service.js","app/services/qualities.service.js","app/store/qualities.js","app/services/profession.service.js","app/store/professions.js","app/services/user.service.js","app/utils/randomInt.js","app/utils/history.js","app/utils/generateAuthError.js","app/store/users.js","app/components/page/editUserPage/editUserPage.jsx","app/components/page/editUserPage/index.js","app/components/ui/userCard.jsx","app/components/ui/qualities/quality.jsx","app/components/ui/qualities/index.js","app/components/common/qualities.jsx","app/components/ui/qualitiesCard.jsx","app/components/ui/meetingsCard.jsx","app/utils/displayDate.js","app/components/common/comments/comment.jsx","app/components/common/comments/commentsList.jsx","app/components/common/form/textAreaField.jsx","app/components/common/comments/addCommentForm.jsx","app/components/common/comments/index.js","app/services/comment.service.js","app/store/comments.js","app/components/ui/comments.jsx","app/components/page/userPage/index.js","app/components/page/userPage/userPage.jsx","app/components/common/pagination.jsx","app/components/common/groupList.jsx","app/components/ui/searchStatus.jsx","app/components/common/table/tableBody.jsx","app/components/common/table/tableHeader.jsx","app/components/common/table/index.js","app/components/common/table/table.jsx","app/components/common/professions.jsx","app/components/ui/usersTable.jsx","app/components/page/usersListPage/index.js","app/components/page/usersListPage/usersListPage.jsx","app/utils/paginate.js","app/hoc/usersLoader.jsx","app/layouts/users.jsx","app/components/common/form/checkBoxField.jsx","app/components/ui/loginForm.jsx","app/components/ui/registerForm.jsx","app/layouts/login.jsx","app/utils/mockData.js","app/layouts/main.jsx","app/components/ui/navProfile.jsx","app/components/ui/navBar.jsx","app/components/common/protectedRoute.jsx","app/layouts/logout.jsx","app/hoc/appLoader.jsx","app/App.js","app/store/createStore.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","validator","data","config","errors","validate","validateMethod","statusValidate","trim","test","length","value","message","fieldName","error","TextField","label","type","name","onChange","useState","showPassword","setShowPassword","className","htmlFor","id","target","onClick","prevState","defaultProps","SelectField","defaultOption","options","optionsArray","Array","isArray","Object","values","disabled","map","option","RadioField","handleChange","checked","MultiSelectField","defaultValue","isMulti","closeMenuOnSelect","classNamePrefix","BackHistoryButton","history","useHistory","goBack","JWT_TOKEN","JWT_REFRESH_TOKEN","JWT_EXPIRES","USERID_KEY","localStorageService","setTokens","refreshToken","idToken","localId","expiresIn","expiresData","Date","getTime","localStorage","setItem","getAccessToken","getItem","getRefreshToken","getExpiresTokenDate","getUserId","removeAuthData","removeItem","httpAuth","axios","create","authService","register","email","password","post","returnSecureToken","login","refresh","grant_type","refresh_token","http","baseURL","configFile","apiEndpoint","interceptors","request","use","isFirebase","containerSlice","url","slice","now","id_token","user_id","expires_in","accessToken","params","auth","Promise","reject","response","res","content","_id","keys","key","status","console","log","httpService","get","put","delete","patch","QualitiesService","fetchAll","qualitiesSlice","createSlice","initialState","entities","isLoading","lastFetch","reducers","qualitiesRequested","state","qualitiesReceived","action","payload","qualitiesRequestFailed","qualitiesReducer","reducer","actions","ProfessionService","professionSlice","professionRequested","professionReceived","professionRequestFailed","professionReducers","userEndPoint","UserService","getCurrentUser","updateUserData","randomInt","min","max","Math","floor","random","createBrowserHistory","GenerateAuthError","userId","isLoggedIn","dataLoaded","usersSlice","usersRequested","usersReceived","usersRequestFailed","authRequestSuccess","authRequestFailed","userCreated","push","userLogOut","updateUserSuccess","findIndex","u","authRequested","usersReducer","createAction","createUserRequested","updateUserRequested","createUserFailed","updateUserFailed","createUser","dispatch","loadUsersList","getUsersByIds","userIds","users","find","EditUserPage","useDispatch","setIsLoading","setData","currentUser","useSelector","qualities","qualitiesLoading","qualitiesList","q","professions","professionLoading","professionsList","p","setErrors","transformData","qualitiesIds","qualitiesArray","qualId","quality","getQualitiesListByIds","qual","useEffect","validatorConfig","isRequired","isEmail","isValid","onSubmit","e","preventDefault","profession","sex","UserCard","user","currentUserId","location","pathname","src","image","width","role","rate","Quality","color","Qualities","QualitiesCard","MeetingsCard","displayDate","date","parseInt","dateNow","getFullYear","getDate","getHours","minutesDif","getMinutes","toLocaleString","month","getMonth","Comment","created","created_at","onRemove","to","alt","height","CommentsList","comments","comment","TextAreaField","AddCommentForm","CommentsEndPoint","CommentsService","createComment","getComment","pageId","orderBy","equalTo","removeComment","commentId","commentsSlice","commentsRequested","commentsReceived","commentsRequestFailed","createCommentSuccess","removeCommentSuccess","filter","c","commentsReducers","createCommentsRequested","removeCommentsRequested","createCommentsFailed","removeCommentsFailed","Comments","useParams","loadCommentsList","sortedComments","getState","nanoid","UserPage","completedMeetings","Pagination","itemsCount","pageSize","onPageChange","currentPage","pageCount","ceil","pages","_","range","page","GroupList","items","valueProperty","contentProperty","onItemSelect","selectedItem","item","SearchStatus","number","lastOne","Number","toString","indexOf","renderPhrase","TableBody","columns","renderContent","column","component","path","TableHeader","onSort","selectedSort","rendeSortArrow","currentPath","order","undefined","scope","Table","children","Professions","professionsIds","prof","UserTable","UsersListPage","setCurrentPage","searchQuery","setSearchQuery","selectedProf","setSelectedProf","sortBy","setSortBy","filteredUsers","toLowerCase","JSON","stringify","count","usersCrop","pageNumber","startIndex","splice","paginate","placeholder","pageIndex","UsersLoader","dataStatus","propTypes","PropTypes","oneOfType","arrayOf","node","Users","edit","CheckBoxField","LoginForm","loginError","stayOn","isCapitalSymbol","isContainDigit","redirect","from","code","errorMessage","RegisterForm","licence","newData","rest","substring","signUp","Login","formType","setFormType","toggleFormType","useMockData","statusConsts","setError","setStatus","progress","setProgress","setCount","summaryCount","incrementCount","newProgress","updateProgress","initialize","Main","NavProfile","isOpen","setOpen","NavBar","ProtectedRoute","Component","render","props","Logout","AppLoader","usersStatusLoading","App","exact","rootReducer","combineReducers","store","configureStore","devTools","process","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.198daf76.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","export function validator(data, config) {\n    const errors = {};\n    function validate(validateMethod, data, config) {\n        let statusValidate;\n        switch (validateMethod) {\n            case \"isRequired\": {\n                if (typeof data === \"boolean\") {\n                    statusValidate = !data;\n                } else {\n                    statusValidate = data.trim() === \"\";\n                }\n                break;\n            }\n            case \"isEmail\": {\n                const emailRegExp = /^\\S+@\\S+\\.\\S+$/g;\n                statusValidate = !emailRegExp.test(data);\n                break;\n            }\n            case \"isCapitalSymbol\": {\n                const capitalRegExp = /[A-Z]+/g;\n                statusValidate = !capitalRegExp.test(data);\n                break;\n            }\n            case \"isContainDigit\": {\n                const digitRegExp = /\\d+/g;\n                statusValidate = !digitRegExp.test(data);\n                break;\n            }\n            case \"min\": {\n                statusValidate = data.length < config.value;\n                break;\n            }\n            default:\n                break;\n        }\n        if (statusValidate) return config.message;\n    }\n    for (const fieldName in data) {\n        for (const validateMethod in config[fieldName]) {\n            const error = validate(\n                validateMethod,\n                data[fieldName],\n                config[fieldName][validateMethod]\n            );\n            if (error && !errors[fieldName]) {\n                errors[fieldName] = error;\n            }\n        }\n    }\n    return errors;\n}\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TextField = ({ label, type, name, value, onChange, error }) => {\n    const [showPassword, setShowPassword] = useState(false);\n\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    const getInputClasses = () => {\n        return \"form-control\" + (error ? \" is-invalid\" : \"\");\n    };\n    const toggleShowPassword = () => {\n        setShowPassword((prevState) => !prevState);\n    };\n    return (\n        <div className=\"mb-4\">\n            <label htmlFor={name}>{label}</label>\n            <div className=\"input-group has-validation\">\n                <input\n                    type={showPassword ? \"text\" : type}\n                    id={name}\n                    name={name}\n                    value={value}\n                    onChange={handleChange}\n                    className={getInputClasses()}\n                />\n                {type === \"password\" && (\n                    <button\n                        className=\"btn btn-outline-secondary\"\n                        type=\"button\"\n                        onClick={toggleShowPassword}\n                    >\n                        <i\n                            className={\n                                \"bi bi-eye\" + (showPassword ? \"-slash\" : \"\")\n                            }\n                        ></i>\n                    </button>\n                )}\n                {error && <div className=\"invalid-feedback\">{error}</div>}\n            </div>\n        </div>\n    );\n};\nTextField.defaultProps = {\n    type: \"text\"\n};\nTextField.propTypes = {\n    label: PropTypes.string,\n    type: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    error: PropTypes.string\n};\n\nexport default TextField;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst SelectField = ({\n    label,\n    value,\n    onChange,\n    defaultOption,\n    options,\n    error,\n    name\n}) => {\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    const getInputClasses = () => {\n        return \"form-select\" + (error ? \" is-invalid\" : \"\");\n    };\n\n    const optionsArray =\n        !Array.isArray(options) && typeof options === \"object\"\n            ? Object.values(options)\n            : options;\n\n    return (\n        <div className=\"mb-4\">\n            <label htmlFor={name} className=\"form-label\">\n                {label}\n            </label>\n            <select\n                className={getInputClasses()}\n                id={name}\n                name={name}\n                value={value}\n                onChange={handleChange}\n            >\n                <option disabled value=\"\">\n                    {defaultOption}\n                </option>\n                {optionsArray.length > 0 &&\n                    optionsArray.map((option) => (\n                        <option value={option.value} key={option.value}>\n                            {option.label}\n                        </option>\n                    ))}\n            </select>\n            {error && <div className=\"invalid-feedback\">{error}</div>}\n        </div>\n    );\n};\n\nSelectField.propTypes = {\n    defaultOption: PropTypes.string,\n    label: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    error: PropTypes.string,\n    options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    name: PropTypes.string\n};\n\nexport default SelectField;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst RadioField = ({ options, name, onChange, value, label }) => {\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    return (\n        <div className=\"mb-4\">\n            <label className=\"form-label\">{label}</label>\n            <div>\n                {options.map((option) => (\n                    <div\n                        key={option.name + \"_\" + option.value}\n                        className=\"form-check form-check-inline\"\n                    >\n                        <input\n                            className=\"form-check-input\"\n                            type=\"radio\"\n                            name={name}\n                            id={option.name + \"_\" + option.value}\n                            checked={option.value === value}\n                            value={option.value}\n                            onChange={handleChange}\n                        />\n                        <label\n                            className=\"form-check-label\"\n                            htmlFor={option.name + \"_\" + option.value}\n                        >\n                            {option.name}\n                        </label>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nRadioField.propTypes = {\n    options: PropTypes.array,\n    name: PropTypes.string,\n    onChange: PropTypes.func,\n    value: PropTypes.string,\n    label: PropTypes.string\n};\n\nexport default RadioField;\n","import React from \"react\";\nimport Select from \"react-select\";\nimport PropTypes from \"prop-types\";\n\nconst MultiSelectField = ({ options, onChange, name, label, defaultValue }) => {\n    const optionsArray =\n        !Array.isArray(options) && typeof options === \"object\"\n            ? Object.values(options)\n            : options;\n\n    const handleChange = (value) => {\n        onChange({ name: name, value });\n    };\n    return (\n        <div className=\"mb-4\">\n            <label className=\"form-label\">{label}</label>\n            <Select\n                isMulti\n                closeMenuOnSelect={false}\n                defaultValue={defaultValue}\n                options={optionsArray}\n                className=\"basic-multi-select\"\n                classNamePrefix=\"select\"\n                onChange={handleChange}\n                name={name}\n            />\n        </div>\n    );\n};\nMultiSelectField.propTypes = {\n    options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    onChange: PropTypes.func,\n    name: PropTypes.string,\n    label: PropTypes.string,\n    defaultValue: PropTypes.array\n};\n\nexport default MultiSelectField;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nconst BackHistoryButton = () => {\n    const history = useHistory();\n    return (\n        <button className=\"btn btn-primary\" onClick={() => history.goBack()}>\n            <i className=\"bi bi-caret-left\"></i>\n            Назад\n        </button>\n    );\n};\n\nexport default BackHistoryButton;\n","const JWT_TOKEN = \"jwt-token\";\nconst JWT_REFRESH_TOKEN = \"jwt-refresh-token\";\nconst JWT_EXPIRES = \"jwt-expires\";\nconst USERID_KEY = \"user-local-id\";\n\nexport const setTokens = ({\n    refreshToken,\n    idToken,\n    localId,\n    expiresIn = 3600\n}) => {\n    const expiresData = new Date().getTime() + expiresIn * 1000;\n    localStorage.setItem(USERID_KEY, localId);\n    localStorage.setItem(JWT_TOKEN, idToken);\n    localStorage.setItem(JWT_REFRESH_TOKEN, refreshToken);\n    localStorage.setItem(JWT_EXPIRES, expiresData);\n};\nexport const getAccessToken = () => {\n    return localStorage.getItem(JWT_TOKEN);\n};\nexport const getRefreshToken = () => {\n    return localStorage.getItem(JWT_REFRESH_TOKEN);\n};\nexport const getExpiresTokenDate = () => {\n    return localStorage.getItem(JWT_EXPIRES);\n};\nexport function getUserId() {\n    return localStorage.getItem(USERID_KEY);\n}\nexport function removeAuthData() {\n    localStorage.removeItem(USERID_KEY);\n    localStorage.removeItem(JWT_TOKEN);\n    localStorage.removeItem(JWT_REFRESH_TOKEN);\n    localStorage.removeItem(JWT_EXPIRES);\n}\nexport const localStorageService = {\n    setTokens,\n    getAccessToken,\n    getRefreshToken,\n    getExpiresTokenDate,\n    getUserId,\n    removeAuthData\n};\n","import axios from \"axios\";\r\nimport { localStorageService } from \"./localStorage.service\";\r\n\r\nconst httpAuth = axios.create();\r\n\r\nexport const authService = {\r\n    register: async ({ email, password }) => {\r\n        const url = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBMCApocFQ8HeQpoM4yIhSsBvW5kgiQj-A`;\r\n        const { data } = await httpAuth.post(url, {\r\n            email,\r\n            password,\r\n            returnSecureToken: true\r\n        });\r\n        return data;\r\n    },\r\n    login: async ({ email, password }) => {\r\n        const url = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBMCApocFQ8HeQpoM4yIhSsBvW5kgiQj-A`;\r\n        const { data } = await httpAuth.post(url, {\r\n            email,\r\n            password,\r\n            returnSecureToken: true\r\n        });\r\n        return data;\r\n    },\r\n    refresh: async () => {\r\n        const url = `https://securetoken.googleapis.com/v1/token?key=AIzaSyBMCApocFQ8HeQpoM4yIhSsBvW5kgiQj-A`;\r\n        const { data } = await httpAuth.post(url, {\r\n            grant_type: \"refresh_token\",\r\n            refresh_token: localStorageService.getRefreshToken()\r\n        });\r\n        return data;\r\n    }\r\n};\r\n","import axios from \"axios\";\nimport configFile from \"../config.json\";\nimport { localStorageService } from \"./localStorage.service\";\nimport { authService } from \"./auth.service\";\n\nconst http = axios.create({\n    baseURL: configFile.apiEndpoint\n});\n\nhttp.interceptors.request.use(\n    async function (config) {\n        if (configFile.isFirebase) {\n            const containerSlice = /\\/$/gi.test(config.url);\n            config.url =\n                (containerSlice ? config.url.slice(0, -1) : config.url) +\n                \".json\";\n            const expiresData = localStorageService.getExpiresTokenDate();\n            const refreshToken = localStorageService.getRefreshToken();\n            if (expiresData && refreshToken < Date.now) {\n                const data = await authService.refresh();\n                localStorageService.setTokens({\n                    refreshToken: data.refresh_token,\n                    idToken: data.id_token,\n                    localId: data.user_id,\n                    expiresIn: data.expires_in\n                });\n            }\n            const accessToken = localStorageService.getAccessToken();\n            if (accessToken) {\n                config.params = { ...config.params, auth: accessToken };\n            }\n        }\n        return config;\n    },\n    function (error) {\n        return Promise.reject(error);\n    }\n);\n\nfunction TransformData(data) {\n    return data && !data._id\n        ? Object.keys(data).map((key) => ({\n              ...data[key]\n          }))\n        : data;\n}\n\nhttp.interceptors.response.use(\n    (res) => {\n        if (configFile.isFirebase) {\n            res.data = { content: TransformData(res.data) };\n        }\n        return res;\n    },\n    function (error) {\n        const expectedErrors =\n            error.response &&\n            error.response.status >= 400 &&\n            error.response.status < 500;\n\n        if (!expectedErrors) {\n            console.log(error);\n        }\n        return Promise.reject(error);\n    }\n);\nconst httpService = {\n    get: http.get,\n    post: http.post,\n    put: http.put,\n    delete: http.delete,\n    patch: http.patch\n};\nexport default httpService;\n","import httpService from \"./http.service\";\n\nconst QualitiesEndPoint = \"quality/\";\n\nexport const QualitiesService = {\n    fetchAll: async () => {\n        const { data } = await httpService.get(QualitiesEndPoint);\n        return data;\n    }\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { QualitiesService } from \"../services/qualities.service\";\r\n\r\nconst qualitiesSlice = createSlice({\r\n    name: \"qualities\",\r\n    initialState: {\r\n        entities: null,\r\n        isLoading: true,\r\n        error: null,\r\n        lastFetch: null\r\n    },\r\n    reducers: {\r\n        qualitiesRequested: (state) => {\r\n            state.isLoading = true;\r\n        },\r\n        qualitiesReceived: (state, action) => {\r\n            state.entities = action.payload;\r\n            state.lastFetch = Date.now();\r\n            state.isLoading = false;\r\n        },\r\n        qualitiesRequestFailed: (state, action) => {\r\n            state.error = action.payload;\r\n            state.isLoading = false;\r\n        }\r\n    }\r\n});\r\n\r\nconst { reducer: qualitiesReducer, actions } = qualitiesSlice;\r\nconst { qualitiesRequested, qualitiesReceived, qualitiesRequestFailed } = actions;\r\n\r\nfunction isOutdated(date) {\r\n    if (Date.now() - date > 10 * 60 * 100) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport const loadQualitiesList = () => async (dispatch, getState) => {\r\n    const { lastFetch } = getState().qualities;\r\n    if (isOutdated(lastFetch)) {\r\n        dispatch(qualitiesRequested());\r\n        try {\r\n            const { content } = await QualitiesService.fetchAll();\r\n            dispatch(qualitiesReceived(content));\r\n        } catch (error) {\r\n            dispatch(qualitiesRequestFailed(error.message));\r\n        };\r\n    };\r\n};\r\n\r\nexport const getQualities = () => (state) => state.qualities.entities;\r\nexport const getQualitiesLoadingStatus = () => (state) => state.qualities.isLoading;\r\nexport const getQualitiesByIds = (qualitiesIds) => (state) => {\r\n    if (state.qualities.entities) {\r\n        const qualitiesArray = [];\r\n        for (const qualId of qualitiesIds) {\r\n            for (const quality of state.qualities.entities) {\r\n                if (quality._id === qualId) {\r\n                    qualitiesArray.push(quality);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return qualitiesArray;\r\n    } else {\r\n        return [];\r\n    }\r\n};\r\n\r\nexport default qualitiesReducer;\r\n","import httpService from \"./http.service\";\n\nconst ProfessionEndPoint = \"profession/\";\n\nexport const ProfessionService = {\n    get: async () => {\n        const { data } = await httpService.get(ProfessionEndPoint);\n        return data;\n    }\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { ProfessionService } from \"../services/profession.service\";\r\n\r\nconst professionSlice = createSlice({\r\n    name: \"profession\",\r\n    initialState: {\r\n        entities: null,\r\n        isLoading: true,\r\n        error: null,\r\n        lastFetch: null\r\n    },\r\n    reducers: {\r\n        professionRequested: (state) => {\r\n            state.isLoading = true;\r\n        },\r\n        professionReceived: (state, action) => {\r\n            state.entities = action.payload;\r\n            state.lastFetch = Date.now();\r\n            state.isLoading = false;\r\n        },\r\n        professionRequestFailed: (state, action) => {\r\n            state.error = action.payload;\r\n            state.isLoading = false;\r\n        }\r\n    }\r\n});\r\n\r\nconst { reducer: professionReducers, actions } = professionSlice;\r\nconst { professionRequested, professionReceived, professionRequestFailed } = actions;\r\n\r\nfunction isOutdated(date) {\r\n    if (Date.now() - date > 10 * 60 * 100) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport const loadProfessionList = () => async (dispatch, getState) => {\r\n    const { lastFetch } = getState().professions;\r\n    if (isOutdated(lastFetch)) {\r\n        dispatch(professionRequested());\r\n        try {\r\n            const { content } = await ProfessionService.get();\r\n            dispatch(professionReceived(content));\r\n        } catch (error) {\r\n            dispatch(professionRequestFailed(error.message));\r\n        }\r\n    }\r\n};\r\n\r\nexport const getProfessions = () => (state) => state.professions.entities;\r\nexport const getProfessionsLoadingStatus = () => (state) => state.professions.isLoading;\r\nexport const getProfessionByIds = (professionsIds) => (state) => {\r\n    if (state.professions.entities) {\r\n        return state.professions.entities.find((p) => p._id === professionsIds);\r\n    } else {\r\n        return [];\r\n    }\r\n};\r\n\r\nexport default professionReducers;\r\n","import httpService from \"./http.service\";\nimport { localStorageService } from \"./localStorage.service\";\n\nconst userEndPoint = \"user/\";\n\nexport const UserService = {\n    get: async () => {\n        const { data } = await httpService.get(userEndPoint);\n        return data;\n    },\n    create: async (payload) => {\n        const { data } = await httpService.put(\n            userEndPoint + payload._id,\n            payload\n        );\n        return data;\n    },\n    getCurrentUser: async () => {\n        const { data } = await httpService.get(\n            userEndPoint + localStorageService.getUserId()\n        );\n        return data;\n    },\n    updateUserData: async (payload) => {\n        const { data } = await httpService.patch(\n            userEndPoint + localStorageService.getUserId(),\n            payload\n        );\n        return data;\n    }\n};\n","export const randomInt = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n};\r\n","import { createBrowserHistory } from \"history\";\r\n\r\nconst history = createBrowserHistory();\r\n\r\nexport default history;\r\n","export const GenerateAuthError = (message) => {\r\n    switch (message) {\r\n        case \"EMAIL_NOT_FOUND\":\r\n            return \"Пользователя с такими данными не существует!\";\r\n        case \"INVALID_PASSWORD\":\r\n            return \"Неправильный email или пароль\";\r\n        case \"EMAIL_EXISTS\":\r\n            return \"Пользователь с таким email уже существует\";\r\n        default:\r\n            return \"Слишком много попыток входа. Попробуйте позже\";\r\n    }\r\n};\r\n","import { createAction, createSlice } from \"@reduxjs/toolkit\";\r\nimport { UserService } from \"../services/user.service\";\r\nimport { authService } from \"../services/auth.service\";\r\nimport { localStorageService } from \"../services/localStorage.service\";\r\nimport { randomInt } from \"./../utils/randomInt\";\r\nimport history from \"../utils/history\";\r\nimport { GenerateAuthError } from \"../utils/generateAuthError\";\r\n\r\nconst initialState = localStorageService.getAccessToken() ? {\r\n    entities: null,\r\n    isLoading: true,\r\n    error: null,\r\n    auth: { userId: localStorageService.getUserId() },\r\n    isLoggedIn: true,\r\n    dataLoaded: false\r\n} : {\r\n    entities: null,\r\n    isLoading: false,\r\n    error: null,\r\n    auth: null,\r\n    isLoggedIn: false,\r\n    dataLoaded: false\r\n};\r\n\r\nconst usersSlice = createSlice({\r\n    name: \"users\",\r\n    initialState,\r\n    reducers: {\r\n        usersRequested: (state) => {\r\n            state.isLoading = true;\r\n        },\r\n        usersReceived: (state, action) => {\r\n            state.entities = action.payload;\r\n            state.dataLoaded = true;\r\n            state.isLoading = false;\r\n        },\r\n        usersRequestFailed: (state, action) => {\r\n            state.error = action.payload;\r\n            state.isLoading = false;\r\n        },\r\n        authRequestSuccess: (state, action) => {\r\n            state.auth = action.payload;\r\n            state.isLoggedIn = true;\r\n        },\r\n        authRequestFailed: (state, action) => {\r\n            state.error = action.payload;\r\n        },\r\n        userCreated: (state, action) => {\r\n            if (!Array.isArray(state.entities)) {\r\n                state.entities = [];\r\n            }\r\n            state.entities.push(action.payload);\r\n        },\r\n        userLogOut: (state) => {\r\n            state.entities = null;\r\n            state.isLoggedIn = false;\r\n            state.auth = null;\r\n            state.dataLoaded = false;\r\n        },\r\n        updateUserSuccess: (state, action) => {\r\n            state.entities[state.entities.findIndex(u => u._id === action.payload._id)] = action.payload;\r\n        },\r\n        authRequested: (state) => {\r\n            state.error = null;\r\n        }\r\n    }\r\n});\r\n\r\nconst { reducer: usersReducer, actions } = usersSlice;\r\nconst {\r\n    usersRequested,\r\n    usersReceived,\r\n    usersRequestFailed,\r\n    authRequestSuccess,\r\n    authRequestFailed,\r\n    userCreated,\r\n    userLogOut,\r\n    updateUserSuccess\r\n} = actions;\r\n\r\nexport const authRequested = createAction(\"users/authRequested\");\r\nconst createUserRequested = createAction(\"users/createUserRequested\");\r\nconst updateUserRequested = createAction(\"users/updateUserRequested\");\r\nconst createUserFailed = createAction(\"users/createUserFailed\");\r\nconst updateUserFailed = createAction(\"users/updateUserFailed\");\r\n\r\nexport const login = ({ payload, redirect }) => async (dispatch) => {\r\n    const { email, password } = payload;\r\n    dispatch(authRequested());\r\n    try {\r\n        const data = await authService.login({ email, password });\r\n        localStorageService.setTokens(data);\r\n        dispatch(authRequestSuccess({ userId: data.localId }));\r\n        history.push(redirect);\r\n    } catch (error) {\r\n        const { code, message } = error.response.data.error;\r\n        if (code === 400) {\r\n            const errorMessage = GenerateAuthError(message);\r\n            dispatch(authRequestFailed(errorMessage));\r\n        } else {\r\n            dispatch(authRequestFailed(error.message));\r\n        }\r\n    }\r\n};\r\nexport const signUp = ({ email, password, ...rest }) => async (dispatch) => {\r\n    dispatch(authRequested());\r\n    try {\r\n        const data = await authService.register({ email, password });\r\n        localStorageService.setTokens(data);\r\n        dispatch(authRequestSuccess({ userId: data.localId }));\r\n        dispatch(\r\n            createUser({\r\n                _id: data.localId,\r\n                email,\r\n                rate: randomInt(1, 5),\r\n                completedMeetings: randomInt(0, 200),\r\n                image: `https://avatars.dicebear.com/api/avataaars/${(\r\n                    Math.random() + 1\r\n                )\r\n                    .toString(36)\r\n                    .substring(7)}.svg`,\r\n                ...rest\r\n            })\r\n        );\r\n    } catch (error) {\r\n        dispatch(authRequestFailed(error.message));\r\n    }\r\n};\r\nexport const logOut = () => (dispatch) => {\r\n    localStorageService.removeAuthData();\r\n    dispatch(userLogOut());\r\n    history.push(\"/\");\r\n};\r\n\r\nexport const updateUserData = (payload) => async (dispatch) => {\r\n    dispatch(updateUserRequested());\r\n    try {\r\n        const { content } = await UserService.updateUserData(payload);\r\n        dispatch(updateUserSuccess(content));\r\n        history.push(`/users/${content._id}`);\r\n    } catch (error) {\r\n        dispatch(updateUserFailed(error.message));\r\n    }\r\n};\r\nfunction createUser(payload) {\r\n    return async function (dispatch) {\r\n        dispatch(createUserRequested());\r\n        try {\r\n            const { content } = await UserService.create(payload);\r\n            dispatch(userCreated(content));\r\n            history.push(\"/users\");\r\n        } catch (error) {\r\n            dispatch(createUserFailed(error.message));\r\n        }\r\n    };\r\n}\r\nexport const loadUsersList = () => async (dispatch) => {\r\n    dispatch(usersRequested());\r\n    try {\r\n        const { content } = await UserService.get();\r\n        dispatch(usersReceived(content));\r\n    } catch (error) {\r\n        dispatch(usersRequestFailed(error.message));\r\n    };\r\n};\r\n\r\nexport const getUsers = () => (state) => state.users.entities;\r\nexport const getIsLoggedIn = () => (state) => state.users.isLoggedIn;\r\nexport const getUsersLoadingStatus = () => (state) => state.users.isLoading;\r\nexport const getDataLoadingStatus = () => (state) => state.users.dataLoaded;\r\nexport const getCurrentUserId = () => (state) => state.users.auth.userId;\r\nexport const getAuthError = () => (state) => state.users.error;\r\nexport const getCurrentUserData = () => (state) => {\r\n    return state.users.entities\r\n        ? state.users.entities.find((u) => u._id === state.users.auth.userId)\r\n        : null;\r\n};\r\nexport const getUsersByIds = (userIds) => (state) => {\r\n    if (state.users.entities) {\r\n        return state.users.entities.find((u) => u._id === userIds);\r\n    }\r\n};\r\n\r\nexport default usersReducer;\r\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { validator } from \"../../../utils/validator\";\nimport TextField from \"../../common/form/textField\";\nimport SelectField from \"../../common/form/selectField\";\nimport RadioField from \"../../common/form/radioField\";\nimport MultiSelectField from \"../../common/form/multiSelectField\";\nimport BackHistoryButton from \"../../common/backButton\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getQualities, getQualitiesLoadingStatus } from \"../../../store/qualities\";\nimport { getProfessions, getProfessionsLoadingStatus } from \"../../../store/professions\";\nimport { getCurrentUserData, updateUserData } from \"../../../store/users\";\n\nconst EditUserPage = () => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const [isLoading, setIsLoading] = useState(true);\n    const [data, setData] = useState();\n    const currentUser = useSelector(getCurrentUserData());\n    const qualities = useSelector(getQualities());\n    const qualitiesLoading = useSelector(getQualitiesLoadingStatus());\n    const qualitiesList = qualities.map((q) => ({\n        label: q.name,\n        value: q._id\n    }));\n    const professions = useSelector(getProfessions());\n    const professionLoading = useSelector(getProfessionsLoadingStatus());\n    const professionsList = professions.map((p) => ({\n        label: p.name,\n        value: p._id\n    }));\n    const [errors, setErrors] = useState({});\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return null;\n        dispatch(updateUserData({\n            ...data,\n            qualities: data.qualities.map(q => q.value)\n        }));\n        history.push(`/users/${currentUser._id}`);\n    };\n    function getQualitiesListByIds(qualitiesIds) {\n        const qualitiesArray = [];\n        for (const qualId of qualitiesIds) {\n            for (const quality of qualities) {\n                if (quality._id === qualId) {\n                    qualitiesArray.push(quality);\n                    break;\n                }\n            }\n        }\n        return qualitiesArray;\n    }\n    const transformData = (data) => {\n        const result = getQualitiesListByIds(data).map((qual) => ({\n            label: qual.name,\n            value: qual._id\n        }));\n        return result;\n    };\n    useEffect(() => {\n        if (!professionLoading && !qualitiesLoading && currentUser && !data) {\n            setData({\n                ...currentUser,\n                qualities: transformData(currentUser.qualities)\n            });\n        }\n    }, [professionLoading, qualitiesLoading, currentUser, data]);\n    useEffect(() => {\n        if (data && isLoading) {\n            setIsLoading(false);\n        }\n    }, [data]);\n\n    const validatorConfig = {\n        email: {\n            isRequired: {\n                message: \"Электронная почта обязательна для заполнения\"\n            },\n            isEmail: {\n                message: \"Email введен некорректно\"\n            }\n        },\n        name: {\n            isRequired: {\n                message: \"Введите ваше имя\"\n            }\n        }\n    };\n    useEffect(() => {\n        validate();\n    }, [data]);\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n    const validate = () => {\n        const errors = validator(data, validatorConfig);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    const isValid = Object.keys(errors).length === 0;\n    return (\n        <div className=\"container mt-5\">\n            <BackHistoryButton />\n            <div className=\"row\">\n                <div className=\"col-md-6 offset-md-3 shadow p-4\">\n                    {!isLoading && Object.keys(professions).length > 0 ? (\n                        <form onSubmit={handleSubmit}>\n                            <TextField\n                                label=\"Имя\"\n                                name=\"name\"\n                                value={data.name}\n                                onChange={handleChange}\n                                error={errors.name}\n                            />\n                            <TextField\n                                label=\"Электронная почта\"\n                                name=\"email\"\n                                value={data.email}\n                                onChange={handleChange}\n                                error={errors.email}\n                            />\n                            <SelectField\n                                label=\"Выбери свою профессию\"\n                                defaultOption=\"Choose...\"\n                                options={professionsList}\n                                name=\"profession\"\n                                onChange={handleChange}\n                                value={data.profession}\n                                error={errors.profession}\n                            />\n                            <RadioField\n                                options={[\n                                    { name: \"Male\", value: \"male\" },\n                                    { name: \"Female\", value: \"female\" },\n                                    { name: \"Other\", value: \"other\" }\n                                ]}\n                                value={data.sex}\n                                name=\"sex\"\n                                onChange={handleChange}\n                                label=\"Выберите ваш пол\"\n                            />\n                            <MultiSelectField\n                                defaultValue={data.qualities}\n                                options={qualitiesList}\n                                onChange={handleChange}\n                                name=\"qualities\"\n                                label=\"Выберите ваши качества\"\n                            />\n                            <button\n                                type=\"submit\"\n                                disabled={!isValid}\n                                className=\"btn btn-primary w-100 mx-auto\"\n                            >\n                                Обновить\n                            </button>\n                        </form>\n                    ) : (\n                        \"Loading...\"\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default EditUserPage;\n","import EditUserPage from \"./editUserPage\";\nexport default EditUserPage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { getCurrentUserId } from \"../../store/users\";\nconst UserCard = ({ user }) => {\n    const currentUserId = useSelector(getCurrentUserId());\n    const history = useHistory();\n    const handleClick = () => {\n        history.push(history.location.pathname + \"/edit\");\n    };\n    return (\n        <div className=\"card mb-3\">\n            <div className=\"card-body\">\n                {user._id === currentUserId && (\n                    <button\n                        className=\"position-absolute top-0 end-0 btn btn-light btn-sm\"\n                        onClick={handleClick}\n                    >\n                        <i className=\"bi bi-gear\"></i>\n                    </button>\n                )}\n                <div className=\"d-flex flex-column align-items-center text-center position-relative\">\n                    <img\n                        src={user.image}\n                        className=\"rounded-circle\"\n                        width=\"150\"\n                    />\n                    <div className=\"mt-3\">\n                        <h4>{user.name}</h4>\n                        <p className=\"text-secondary mb-1\">\n                            {user.profession.name}\n                        </p>\n                        <div className=\"text-muted\">\n                            <i\n                                className=\"bi bi-caret-down-fill text-primary\"\n                                role=\"button\"\n                            ></i>\n                            <i\n                                className=\"bi bi-caret-up text-secondary\"\n                                role=\"button\"\n                            ></i>\n                            <span className=\"ms-2\">{user.rate}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\nUserCard.propTypes = {\n    user: PropTypes.object\n};\n\nexport default UserCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst Quality = ({ _id, color, name }) => {\n    return (\n        <span key={_id} className={\"badge m-1 bg-\" + color}>\n            {name}\n        </span>\n    );\n};\nQuality.propTypes = {\n    _id: PropTypes.string.isRequired,\n    color: PropTypes.string,\n    name: PropTypes.string\n};\n\nexport default Quality;\n","import Qualities from \"../../common/qualities\";\nexport default Qualities;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Quality from \"../ui/qualities/quality\";\nimport { useSelector } from \"react-redux\";\nimport { getQualitiesByIds, getQualitiesLoadingStatus } from \"../../store/qualities\";\n\nconst Qualities = ({ qualities }) => {\n    const isLoading = useSelector(getQualitiesLoadingStatus());\n    const qualitiesList = useSelector(getQualitiesByIds(qualities));\n    if (isLoading) { return \"loading\"; }\n    return (\n        <div>\n            {qualitiesList.map((qual) => (\n                <Quality key={qual._id} {...qual} />\n            ))}\n        </div>\n    );\n};\n\nQualities.propTypes = {\n    qualities: PropTypes.array\n};\n\nexport default Qualities;\n","import React from \"react\";\nimport Qualities from \"./qualities\";\nimport PropTypes from \"prop-types\";\n\nconst QualitiesCard = ({ data }) => {\n    return (\n        <div className=\"card mb-3\">\n            <div className=\"card-body d-flex flex-column justify-content-center text-center\">\n                <h5 className=\"card-title\">\n                    <span>Qualities</span>\n                </h5>\n                <div className=\"card-text\">\n                    <Qualities qualities={data} />\n                </div>\n            </div>\n        </div>\n    );\n};\nQualitiesCard.propTypes = {\n    data: PropTypes.array\n};\n\nexport default QualitiesCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst MeetingsCard = ({ value }) => {\n    return (\n        <div className=\"card mb-3\">\n            <div className=\"card-body d-flex flex-column justify-content-center text-center\">\n                <h5 className=\"card-title\">\n                    <span>Completed meetings</span>\n                </h5>\n\n                <h1 className=\"display-1\">{value}</h1>\n            </div>\n        </div>\n    );\n};\nMeetingsCard.propTypes = {\n    value: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n};\n\nexport default MeetingsCard;\n","export function displayDate(data) {\n    const date = new Date(parseInt(data));\n    const dateNow = new Date();\n    const yearDif = dateNow.getFullYear() - date.getFullYear();\n    if (yearDif === 0) {\n        const dayDif = dateNow.getDate() - date.getDate();\n        if (dayDif === 0) {\n            const hourDif = dateNow.getHours() - date.getHours();\n            if (hourDif === 0) {\n                const minutesDif = dateNow.getMinutes() - date.getMinutes();\n\n                if (minutesDif >= 0 && minutesDif < 5) return \"1 минуту назад\";\n                if (minutesDif >= 5 && minutesDif < 10) return \"5 минут назад\";\n                if (minutesDif >= 10 && minutesDif < 30) {\n                    return \"10 минут назад\";\n                }\n                return \"30 минут назад\";\n            }\n            return `${date.getHours()}:${date.getMinutes()}`;\n        }\n\n        return `${date.getDate()} ${date.toLocaleString(\"default\", {\n            month: \"long\"\n        })}`;\n    }\n    return (\n        date.getFullYear() + \".\" + (date.getMonth() + 1) + \"_\" + date.getDate()\n    );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { displayDate } from \"../../../utils/displayDate\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { getCurrentUserData, getCurrentUserId, getUsersByIds } from \"../../../store/users\";\nconst Comment = ({\n    content,\n    created_at: created,\n    _id: id,\n    userId,\n    onRemove\n}) => {\n    const user = useSelector(getUsersByIds(userId));\n    const currentUserId = useSelector(getCurrentUserId());\n    const currentUser = useSelector(getCurrentUserData());\n    return (\n        <div className=\"bg-light card-body  mb-3\">\n            <div className=\"row\">\n                <div className=\"col\">\n                    <div className=\"d-flex flex-start \">\n                        <Link to={`/users/${currentUser._id}`}>\n                            <img\n                                src={user.image}\n                                className=\"rounded-circle shadow-1-strong me-3\"\n                                alt=\"avatar\"\n                                width=\"65\"\n                                height=\"65\"\n                            />\n                        </Link>\n                        <div className=\"flex-grow-1 flex-shrink-1\">\n                            <div className=\"mb-4\">\n                                <div className=\"d-flex justify-content-between align-items-center\">\n                                    {userId.name}\n                                    <p className=\"mb-1 \">\n                                        {user && user.name}{\" \"}\n                                        <span className=\"small\">\n                                            - {displayDate(created)}\n                                        </span>\n                                    </p>\n                                    {currentUserId === userId && (\n                                        <button\n                                            className=\"btn btn-sm text-primary d-flex align-items-center\"\n                                            onClick={() => onRemove(id)}\n                                        >\n                                            <i className=\"bi bi-x-lg\"></i>\n                                        </button>\n                                    )}\n                                </div>\n                                <p className=\"small mb-0\">{content}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\nComment.propTypes = {\n    content: PropTypes.string,\n    edited_at: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    created_at: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    userId: PropTypes.string,\n    onRemove: PropTypes.func,\n    _id: PropTypes.string\n};\n\nexport default Comment;\n","import React from \"react\";\nimport Comment from \"./comment\";\nimport PropTypes from \"prop-types\";\n\nconst CommentsList = ({ comments, onRemove }) => {\n    return comments.map((comment) => (\n        <Comment key={comment._id} {...comment} onRemove={onRemove} />\n    ));\n};\nCommentsList.propTypes = {\n    comment: PropTypes.array,\n    onRemove: PropTypes.func\n};\n\nexport default CommentsList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TextAreaField = ({ label, name, value, onChange, error }) => {\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    const getInputClasses = () => {\n        return \"form-control\" + (error ? \" is-invalid\" : \"\");\n    };\n\n    return (\n        <div className=\"mb-4\">\n            <label htmlFor={name}> {label}</label>\n            <div className=\"input-group has-validation\">\n                <textarea\n                    id={name}\n                    name={name}\n                    value={value}\n                    onChange={handleChange}\n                    className={getInputClasses()}\n                />\n\n                {error && <div className=\"invalid-feedback \">{error}</div>}\n            </div>\n        </div>\n    );\n};\nTextAreaField.defaultProps = {\n    type: \"text\"\n};\nTextAreaField.propTypes = {\n    label: PropTypes.string,\n    type: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    error: PropTypes.string\n};\n\nexport default TextAreaField;\n","import React, { useState } from \"react\";\nimport TextAreaField from \"../form/textAreaField\";\nimport { validator } from \"../../../utils/validator\";\nimport PropTypes from \"prop-types\";\n\nconst AddCommentForm = ({ onSubmit }) => {\n    const [data, setData] = useState({});\n    const [errors, setErrors] = useState({});\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n    const validatorConfig = {\n        content: {\n            isRequired: {\n                message: \"Сообщение не может быть пустым\"\n            }\n        }\n    };\n\n    const validate = () => {\n        const errors = validator(data, validatorConfig);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    const clearForm = () => {\n        setData({});\n        setErrors({});\n    };\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n        onSubmit(data);\n        clearForm();\n    };\n    return (\n        <div>\n            <h2>New comment</h2>\n            <form onSubmit={handleSubmit}>\n                <TextAreaField\n                    value={data.content || \"\"}\n                    onChange={handleChange}\n                    name=\"content\"\n                    label=\"Сообщение\"\n                    error={errors.content}\n                />\n                <div className=\"d-flex justify-content-end\">\n                    <button className=\"btn btn-primary\">Опубликовать</button>\n                </div>\n            </form>\n        </div>\n    );\n};\nAddCommentForm.propTypes = {\n    onSubmit: PropTypes.func\n};\n\nexport default AddCommentForm;\n","import CommentsList from \"./commentsList\";\nimport AddCommentForm from \"./addCommentForm\";\nexport default CommentsList;\nexport { AddCommentForm };\n","import httpService from \"./http.service\";\n\nconst CommentsEndPoint = \"comment/\";\n\nexport const CommentsService = {\n    createComment: async (payload) => {\n        const { data } = await httpService.put(\n            CommentsEndPoint + payload._id,\n            payload\n        );\n        return data;\n    },\n    getComment: async (pageId) => {\n        const { data } = await httpService.get(CommentsEndPoint, {\n            params: {\n                orderBy: '\"pageId\"',\n                equalTo: `\"${pageId}\"`\n            }\n        });\n        return data;\n    },\n    removeComment: async (commentId) => {\n        const { data } = await httpService.delete(CommentsEndPoint + commentId);\n        return data;\n    }\n};\n","import { createAction, createSlice } from \"@reduxjs/toolkit\";\r\nimport { CommentsService } from \"../services/comment.service\";\r\nimport { nanoid } from \"nanoid\";\r\nimport { getCurrentUserId } from \"./users\";\r\n\r\nconst commentsSlice = createSlice({\r\n    name: \"comments\",\r\n    initialState: {\r\n        entities: null,\r\n        isLoading: true,\r\n        error: null\r\n    },\r\n    reducers: {\r\n        commentsRequested: (state) => {\r\n            state.isLoading = true;\r\n        },\r\n        commentsReceived: (state, action) => {\r\n            state.entities = action.payload;\r\n            state.isLoading = false;\r\n        },\r\n        commentsRequestFailed: (state, action) => {\r\n            state.error = action.payload;\r\n            state.isLoading = false;\r\n        },\r\n        createCommentSuccess: (state, action) => {\r\n            state.entities.push(action.payload);\r\n        },\r\n        removeCommentSuccess: (state, action) => {\r\n            state.entities = state.entities.filter(\r\n                (c) => c._id !== action.payload\r\n            );\r\n        }\r\n    }\r\n});\r\n\r\nconst { reducer: commentsReducers, actions } = commentsSlice;\r\nconst { commentsRequested, commentsReceived, commentsRequestFailed, createCommentSuccess, removeCommentSuccess } = actions;\r\n\r\nconst createCommentsRequested = createAction(\"users/createCommentsRequested\");\r\nconst removeCommentsRequested = createAction(\"users/removeCommentsRequested\");\r\nconst createCommentsFailed = createAction(\"users/createCommentsFailed\");\r\nconst removeCommentsFailed = createAction(\"users/removeCommentsFailed\");\r\n\r\nexport const loadCommentsList = (userId) => async (dispatch) => {\r\n    dispatch(commentsRequested());\r\n    try {\r\n        const { content } = await CommentsService.getComment(userId);\r\n        dispatch(commentsReceived(content));\r\n    } catch (error) {\r\n        dispatch(commentsRequestFailed(error.message));\r\n    }\r\n};\r\n\r\nexport const getComments = () => (state) => state.comments.entities;\r\nexport const getCommentsLoadingStatus = () => (state) => state.comments.isLoading;\r\n\r\nexport const createComment = (payload) => async (dispatch, getState) => {\r\n    const comment = {\r\n        ...payload,\r\n        _id: nanoid(),\r\n        userId: getCurrentUserId()(getState()),\r\n        created_at: Date.now()\r\n    };\r\n    try {\r\n        dispatch(createCommentsRequested());\r\n        const { content } = await CommentsService.createComment(comment);\r\n        dispatch(createCommentSuccess(content));\r\n    } catch (error) {\r\n        dispatch(createCommentsFailed(error.message));\r\n    }\r\n};\r\nexport const removeComment = (commentId) => async (dispatch) => {\r\n    dispatch(removeCommentsRequested());\r\n    try {\r\n        const { content } = await CommentsService.removeComment(commentId);\r\n        if (content === null) {\r\n            dispatch(removeCommentSuccess(commentId));\r\n        }\r\n    } catch (error) {\r\n        dispatch(removeCommentsFailed(error.message));\r\n    }\r\n};\r\n\r\nexport default commentsReducers;\r\n","import { orderBy } from \"lodash\";\nimport React, { useEffect } from \"react\";\nimport CommentsList, { AddCommentForm } from \"../common/comments\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n    createComment,\n    getComments,\n    getCommentsLoadingStatus,\n    loadCommentsList,\n    removeComment\n} from \"../../store/comments\";\nimport { useParams } from \"react-router-dom\";\n\nconst Comments = () => {\n    const { userId } = useParams();\n    const dispatch = useDispatch();\n    const isLoading = useSelector(getCommentsLoadingStatus());\n    const comments = useSelector(getComments());\n    const handleSubmit = (data) => {\n        dispatch(createComment({ ...data, pageId: userId }));\n    };\n    const handleRemoveComment = (id) => {\n        dispatch(removeComment(id));\n    };\n    useEffect(() => {\n        dispatch(loadCommentsList(userId));\n    }, [userId]);\n    const sortedComments = orderBy(comments, [\"created_at\"], [\"desc\"]);\n    return (\n        <>\n            <div className=\"card mb-2\">\n                {\" \"}\n                <div className=\"card-body \">\n                    <AddCommentForm onSubmit={handleSubmit} />\n                </div>\n            </div>\n            {sortedComments.length > 0 && (\n                <div className=\"card mb-3\">\n                    <div className=\"card-body \">\n                        <h2>Comments</h2>\n                        <hr />\n                        {!isLoading\n                            ? <CommentsList\n                                comments={sortedComments}\n                                onRemove={handleRemoveComment}\n                            />\n                        : \"loading\"\n                        }\n                    </div>\n                </div>\n            )}\n        </>\n    );\n};\n\nexport default Comments;\n","import UserPage from \"./userPage\";\nexport default UserPage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport UserCard from \"../../ui/userCard\";\nimport QualitiesCard from \"../../ui/qualitiesCard\";\nimport MeetingsCard from \"../../ui/meetingsCard\";\nimport Comments from \"../../ui/comments\";\nimport { useSelector } from \"react-redux\";\nimport { getUsersByIds } from \"../../../store/users\";\n\nconst UserPage = ({ userId }) => {\n    const user = useSelector(getUsersByIds(userId));\n    if (user) {\n        return (\n            <div className=\"container\">\n                <div className=\"row gutters-sm\">\n                    <div className=\"col-md-4 mb-3\">\n                        <UserCard user={user} />\n                        <QualitiesCard data={user.qualities} />\n                        <MeetingsCard value={user.completedMeetings} />\n                    </div>\n                    <div className=\"col-md-8\">\n                        <Comments />\n                    </div>\n                </div>\n            </div>\n        );\n    } else {\n        return <h1>Loading</h1>;\n    }\n};\n\nUserPage.propTypes = {\n    userId: PropTypes.string.isRequired\n};\n\nexport default UserPage;\n","import React from \"react\";\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\n\nconst Pagination = ({ itemsCount, pageSize, onPageChange, currentPage }) => {\n    const pageCount = Math.ceil(itemsCount / pageSize);\n    if (pageCount === 1) return null;\n    const pages = _.range(1, pageCount + 1);\n    return (\n        <nav>\n            <ul className=\"pagination\">\n                {pages.map((page) => (\n                    <li\n                        className={\n                            \"page-item\" +\n                            (page === currentPage ? \" active\" : \"\")\n                        }\n                        key={\"page_\" + page}\n                    >\n                        <button\n                            className=\"page-link\"\n                            onClick={() => onPageChange(page)}\n                        >\n                            {page}\n                        </button>\n                    </li>\n                ))}\n            </ul>\n        </nav>\n    );\n};\nPagination.propTypes = {\n    itemsCount: PropTypes.number.isRequired,\n    pageSize: PropTypes.number.isRequired,\n    onPageChange: PropTypes.func.isRequired,\n    currentPage: PropTypes.number.isRequired\n};\n\nexport default Pagination;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst GroupList = ({\n    items,\n    valueProperty,\n    contentProperty,\n    onItemSelect,\n    selectedItem\n}) => {\n    if (!Array.isArray(items)) {\n        return (\n            <ul className=\"list-group\">\n                {Object.keys(items).map((item) => (\n                    <li\n                        key={items[item][valueProperty]}\n                        className={\n                            \"list-group-item\" +\n                            (items[item] === selectedItem ? \" active\" : \"\")\n                        }\n                        onClick={() => onItemSelect(items[item])}\n                        role=\"button\"\n                    >\n                        {items[item][contentProperty]}\n                    </li>\n                ))}\n            </ul>\n        );\n    }\n    return (\n        <ul className=\"list-group\">\n            {items.map((item) => (\n                <li\n                    key={item[valueProperty]}\n                    className={\n                        \"list-group-item\" +\n                        (item === selectedItem ? \" active\" : \"\")\n                    }\n                    onClick={() => onItemSelect(item)}\n                    role=\"button\"\n                >\n                    {item[contentProperty]}\n                </li>\n            ))}\n        </ul>\n    );\n};\nGroupList.defaultProps = {\n    valueProperty: \"_id\",\n    contentProperty: \"name\"\n};\nGroupList.propTypes = {\n    items: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    valueProperty: PropTypes.string.isRequired,\n    contentProperty: PropTypes.string.isRequired,\n    onItemSelect: PropTypes.func,\n    selectedItem: PropTypes.object\n};\n\nexport default GroupList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst SearchStatus = ({ length }) => {\n    const renderPhrase = (number) => {\n        const lastOne = Number(number.toString().slice(-1));\n        if (number > 4 && number < 15) {\n            return \"человек тусанет\";\n        }\n        if (lastOne === 1) return \"человек тусанет\";\n        if ([2, 3, 4].indexOf(lastOne) >= 0) return \"человека тусанут\";\n        return \"человек тусанет\";\n    };\n    return (\n        <h2>\n            <span\n                className={\"badge \" + (length > 0 ? \"bg-primary\" : \"bg-danger\")}\n            >\n                {length > 0\n                    ? `${length + \" \" + renderPhrase(length)}   с тобой сегодня`\n                    : \"Никто с тобой не тусанет\"}\n            </span>\n        </h2>\n    );\n};\nSearchStatus.propTypes = {\n    length: PropTypes.number\n};\n\nexport default SearchStatus;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nconst TableBody = ({ data, columns }) => {\n    const renderContent = (item, column) => {\n        if (columns[column].component) {\n            const component = columns[column].component;\n            if (typeof component === \"function\") {\n                return component(item);\n            }\n            return component;\n        }\n        return _.get(item, columns[column].path);\n    };\n    console.log(data.map((item) => (\n        <tr key={item._id}>\n            {Object.keys(columns).map((column) => (\n                <td key={column}>{renderContent(item, column)}</td>\n            ))}\n        </tr>\n    )));\n    return (\n        <tbody>\n            {data.map((item) => (\n                <tr key={item._id}>\n                    {Object.keys(columns).map((column) => (\n                        <td key={column}>{renderContent(item, column)}</td>\n                    ))}\n                </tr>\n            ))}\n        </tbody>\n    );\n};\n\nTableBody.propTypes = {\n    data: PropTypes.array.isRequired,\n    columns: PropTypes.object.isRequired\n};\n\nexport default TableBody;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst TableHeader = ({ onSort, selectedSort, columns }) => {\n    const handleSort = (item) => {\n        if (selectedSort.path === item) {\n            onSort({\n                ...selectedSort,\n                order: selectedSort.order === \"asc\" ? \"desc\" : \"asc\"\n            });\n        } else {\n            onSort({ path: item, order: \"asc\" });\n        }\n    };\n    const rendeSortArrow = (selectedSort, currentPath) => {\n        if (selectedSort.path === currentPath) {\n            if (selectedSort.order === \"asc\") {\n                return <i className=\"bi bi-caret-down-fill\"></i>;\n            } else {\n                return <i className=\"bi bi-caret-up-fill\"></i>;\n            }\n        }\n        return null;\n    };\n\n    return (\n        <thead>\n            <tr>\n                {Object.keys(columns).map((column) => (\n                    <th\n                        key={column}\n                        onClick={\n                            columns[column].path\n                                ? () => handleSort(columns[column].path)\n                                : undefined\n                        }\n                        {...{ role: columns[column].path && \"button\" }}\n                        scope=\"col\"\n                    >\n                        {columns[column].name}{\" \"}\n                        {rendeSortArrow(selectedSort, columns[column].path)}\n                    </th>\n                ))}\n            </tr>\n        </thead>\n    );\n};\nTableHeader.propTypes = {\n    onSort: PropTypes.func.isRequired,\n    selectedSort: PropTypes.object.isRequired,\n    columns: PropTypes.object.isRequired\n};\n\nexport default TableHeader;\n","import Table from \"./table\";\nimport TableBody from \"./tableBody\";\nimport TableHeader from \"./tableHeader\";\n\nexport default Table;\n\nexport { TableBody, TableHeader };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TableBody from \"./tableBody\";\nimport TableHeader from \"./tableHeader\";\n\nconst Table = ({ onSort, selectedSort, columns, data, children }) => {\n    return (\n        <table className=\"table\">\n            {children || (\n                <>\n                    <TableHeader {...{ onSort, selectedSort, columns }} />\n                    <TableBody {...{ columns, data }} />\n                </>\n            )}\n        </table>\n    );\n};\nTable.propTypes = {\n    onSort: PropTypes.func,\n    selectedSort: PropTypes.object,\n    columns: PropTypes.object,\n    data: PropTypes.array,\n    children: PropTypes.array\n};\n\nexport default Table;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport { getProfessionByIds, getProfessionsLoadingStatus } from \"../../store/professions\";\n\nexport const Professions = ({ id }) => {\n    const prof = useSelector(getProfessionByIds(id));\n    const isLoading = useSelector(getProfessionsLoadingStatus());\n    if (!isLoading) {\n        return <p> {prof.name} </p>;\n    } else {\n        return \"loading\";\n    }\n};\n\nProfessions.propTypes = {\n    id: PropTypes.string\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Table from \"../common/table\";\nimport { Link } from \"react-router-dom\";\nimport { Professions } from \"../common/professions\";\nimport Qualities from \"./qualities\";\n\nconst UserTable = ({\n    users,\n    onSort,\n    selectedSort\n}) => {\n    const columns = {\n        name: {\n            path: \"name\",\n            name: \"Имя\",\n            component: (user) => (\n                <Link to={`/users/${user._id}`}>{user.name}</Link>\n            )\n        },\n        qualities: {\n            name: \"Качества\",\n            component: (user) => <Qualities qualities={user.qualities} />\n        },\n        professions: {\n            name: \"Профессия\",\n            component: (user) => <Professions id={user.profession} />\n        },\n        completedMeetings: {\n            path: \"completedMeetings\",\n            name: \"Встретился, раз\"\n        },\n        rate: { path: \"rate\", name: \"Оценка\" }\n    };\n    return (\n        <Table\n            onSort={onSort}\n            selectedSort={selectedSort}\n            columns={columns}\n            data={users}\n        />\n    );\n};\n\nUserTable.propTypes = {\n    users: PropTypes.array.isRequired,\n    onSort: PropTypes.func.isRequired,\n    selectedSort: PropTypes.object.isRequired\n};\n\nexport default UserTable;\n","import UsersListPage from \"./usersListPage\";\nexport default UsersListPage;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { paginate } from \"../../../utils/paginate\";\nimport Pagination from \"../../common/pagination\";\nimport GroupList from \"../../common/groupList\";\nimport SearchStatus from \"../../ui/searchStatus\";\nimport UserTable from \"../../ui/usersTable\";\nimport _ from \"lodash\";\nimport { useSelector } from \"react-redux\";\nimport { getProfessions, getProfessionsLoadingStatus } from \"../../../store/professions\";\nimport { getCurrentUserId, getUsers } from \"../../../store/users\";\nconst UsersListPage = () => {\n    const currentUserId = useSelector(getCurrentUserId());\n    const isLoading = useSelector(getProfessionsLoadingStatus());\n    const professions = useSelector(getProfessions());\n    const [currentPage, setCurrentPage] = useState(1);\n    const [searchQuery, setSearchQuery] = useState(\"\");\n    const [selectedProf, setSelectedProf] = useState();\n    const [sortBy, setSortBy] = useState({ path: \"name\", order: \"asc\" });\n    const pageSize = 4;\n    const users = useSelector(getUsers());\n    useEffect(() => {\n        setCurrentPage(1);\n    }, [selectedProf, searchQuery]);\n\n    const handleProfessionSelect = (item) => {\n        if (searchQuery !== \"\") setSearchQuery(\"\");\n        setSelectedProf(item);\n    };\n    const handleSearchQuery = ({ target }) => {\n        setSelectedProf(undefined);\n        setSearchQuery(target.value);\n    };\n\n    const handlePageChange = (pageIndex) => {\n        setCurrentPage(pageIndex);\n    };\n    const handleSort = (item) => {\n        setSortBy(item);\n    };\n\n    if (users) {\n        function filterUsers(data) {\n            const filteredUsers = searchQuery\n                ? data.filter(\n                      (user) =>\n                          user.name\n                              .toLowerCase()\n                              .indexOf(searchQuery.toLowerCase()) !== -1\n                  )\n                : selectedProf\n                ? data.filter(\n                      (user) =>\n                          JSON.stringify(user.profession) === JSON.stringify(selectedProf)\n                  )\n                : data;\n            return filteredUsers.filter((u) => u._id !== currentUserId);\n        }\n        const filteredUsers = filterUsers(users);\n        const count = filteredUsers.length;\n        const sortedUsers = _.orderBy(\n            filteredUsers,\n            [sortBy.path],\n            [sortBy.order]\n        );\n        const usersCrop = paginate(sortedUsers, currentPage, pageSize);\n        const clearFilter = () => {\n            setSelectedProf();\n        };\n\n        return (\n            <div className=\"d-flex\">\n                {professions && !isLoading && (\n                    <div className=\"d-flex flex-column flex-shrink-0 p-3\">\n                        <GroupList\n                            selectedItem={selectedProf}\n                            items={professions}\n                            onItemSelect={handleProfessionSelect}\n                        />\n                        <button\n                            className=\"btn btn-secondary mt-2\"\n                            onClick={clearFilter}\n                        >\n                            {\" \"}\n                            Очистить\n                        </button>\n                    </div>\n                )}\n                <div className=\"d-flex flex-column\">\n                    <SearchStatus length={count} />\n                    <input\n                        type=\"text\"\n                        name=\"searchQuery\"\n                        placeholder=\"Search...\"\n                        onChange={handleSearchQuery}\n                        value={searchQuery}\n                    />\n                    {count > 0 && (\n                        <UserTable\n                            users={usersCrop}\n                            onSort={handleSort}\n                            selectedSort={sortBy}\n                        />\n                    )}\n                    <div className=\"d-flex justify-content-center\">\n                        <Pagination\n                            itemsCount={count}\n                            pageSize={pageSize}\n                            currentPage={currentPage}\n                            onPageChange={handlePageChange}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    return \"loading...\";\n};\nUsersListPage.propTypes = {\n    users: PropTypes.array\n};\n\nexport default UsersListPage;\n","export function paginate(items, pageNumber, pageSize) {\n    const startIndex = (pageNumber - 1) * pageSize;\n    return [...items].splice(startIndex, pageSize);\n}\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { getDataLoadingStatus, loadUsersList } from \"../store/users\";\r\nimport { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const UsersLoader = ({ children }) => {\r\n    const dataStatus = useSelector(getDataLoadingStatus());\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        if (!dataStatus) dispatch(loadUsersList());\r\n    }, []);\r\n    if (!dataStatus) return \"loading\";\r\n    return children;\r\n};\r\n\r\nUsersLoader.propTypes = {\r\n    children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node])\r\n};\r\n","import React from \"react\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport EditUserPage from \"../components/page/editUserPage\";\nimport UserPage from \"../components/page/userPage\";\nimport UsersListPage from \"../components/page/usersListPage\";\nimport { useSelector } from \"react-redux\";\nimport { getCurrentUserId } from \"../store/users\";\nimport { UsersLoader } from \"../hoc/usersLoader\";\n\nconst Users = () => {\n    const params = useParams();\n    const { userId, edit } = params;\n    const currentUserId = useSelector(getCurrentUserId());\n    return (\n        <>\n            <UsersLoader>\n                    {userId ? (\n                        edit ? (\n                            userId === currentUserId\n                                ? <EditUserPage/>\n                                : <Redirect to={`/users/${currentUserId}/edit`}/>\n                        ) : (\n                            <UserPage userId={userId} />\n                        )\n                    ) : (\n                        <UsersListPage />\n                    )}\n            </UsersLoader>\n        </>\n    );\n};\n\nexport default Users;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst CheckBoxField = ({ name, value, onChange, children, error }) => {\n    const handleChange = () => {\n        onChange({ name: name, value: !value });\n    };\n    const getInputClasses = () => {\n        return \"form-check-input\" + (error ? \" is-invalid\" : \"\");\n    };\n    return (\n        <div className=\"form-check mb-4\">\n            <input\n                className={getInputClasses()}\n                type=\"checkbox\"\n                value=\"\"\n                id={name}\n                onChange={handleChange}\n                checked={value}\n            />\n            <label className=\"form-check-label\" htmlFor={name}>\n                {children}\n            </label>\n            {error && <div className=\"invalid-feedback\">{error}</div>}\n        </div>\n    );\n};\nCheckBoxField.propTypes = {\n    name: PropTypes.string,\n    value: PropTypes.bool,\n    onChange: PropTypes.func,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]),\n    error: PropTypes.string\n};\n\nexport default CheckBoxField;\n","import React, { useEffect, useState } from \"react\";\nimport { validator } from \"../../utils/validator\";\nimport TextField from \"../common/form/textField\";\nimport CheckBoxField from \"../common/form/checkBoxField\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAuthError, login } from \"../../store/users\";\n\nconst LoginForm = () => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const loginError = useSelector(getAuthError());\n    const [data, setData] = useState({\n        email: \"\",\n        password: \"\",\n        stayOn: false\n    });\n    const [errors, setErrors] = useState({});\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n    const validatorConfig = {\n        email: {\n            isRequired: {\n                message: \"Электронная почта обязательна для заполнения\"\n            },\n            isEmail: {\n                message: \"Email введен некорректно\"\n            }\n        },\n        password: {\n            isRequired: {\n                message: \"Пароль обязателен для заполнения\"\n            },\n            isCapitalSymbol: {\n                message: \"Пароль должен содержать хотя бы одну заглавную букву\"\n            },\n            isContainDigit: {\n                message: \"Пароль должен содержать хотя бы одно число\"\n            },\n            min: {\n                message: \"Пароль должен состоять минимум из 8 символов\",\n                value: 8\n            }\n        }\n    };\n    useEffect(() => {\n        validate();\n    }, [data]);\n    const validate = () => {\n        const errors = validator(data, validatorConfig);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    const isValid = Object.keys(errors).length === 0;\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n        const redirect = history.location.state ? history.location.state.from.pathname : \"/\";\n        dispatch(login({ payload: data, redirect }));\n    };\n    return (\n        <form onSubmit={handleSubmit}>\n            <TextField\n                label=\"Электронная почта\"\n                name=\"email\"\n                value={data.email}\n                onChange={handleChange}\n                error={errors.email}\n            />\n            <TextField\n                label=\"Пароль\"\n                type=\"password\"\n                name=\"password\"\n                value={data.password}\n                onChange={handleChange}\n                error={errors.password}\n            />\n            <CheckBoxField\n                value={data.stayOn}\n                onChange={handleChange}\n                name=\"stayOn\"\n            >\n                Оставаться в системе\n            </CheckBoxField>\n            { loginError && <p className={\"text-danger\"}>{loginError}</p> }\n            <button\n                className=\"btn btn-primary w-100 mx-auto\"\n                type=\"submit\"\n                disabled={!isValid}\n            >\n                Submit\n            </button>\n        </form>\n    );\n};\n\nexport default LoginForm;\n","import React, { useEffect, useState } from \"react\";\nimport { validator } from \"../../utils/validator\";\nimport TextField from \"../common/form/textField\";\nimport SelectField from \"../common/form/selectField\";\nimport RadioField from \"../common/form/radioField\";\nimport MultiSelectField from \"../common/form/multiSelectField\";\nimport CheckBoxField from \"../common/form/checkBoxField\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getQualities } from \"../../store/qualities\";\nimport { getProfessions } from \"../../store/professions\";\nimport { signUp } from \"../../store/users\";\n\nconst RegisterForm = () => {\n    const dispatch = useDispatch();\n    const [data, setData] = useState({\n        email: \"\",\n        password: \"\",\n        profession: \"\",\n        sex: \"male\",\n        qualities: [],\n        name: \"\",\n        licence: false\n    });\n    const qualities = useSelector(getQualities());\n    const qualitiesList = qualities.map((q) => ({\n        label: q.name,\n        value: q._id\n    }));\n    const professions = useSelector(getProfessions());\n    const professionsList = professions.map((p) => ({\n        label: p.name,\n        value: p._id\n    }));\n    const [errors, setErrors] = useState({});\n\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n    const validatorConfig = {\n        email: {\n            isRequired: {\n                message: \"Электронная почта обязательна для заполнения\"\n            },\n            isEmail: {\n                message: \"Email введен некорректно\"\n            }\n        },\n        name: {\n            isRequired: {\n                message: \"Имя обязательно для заполнения\"\n            },\n            min: {\n                message: `Имя должно состоять минимум из 3 символов`,\n                value: 3\n            }\n        },\n        password: {\n            isRequired: {\n                message: \"Пароль обязателен для заполнения\"\n            },\n            isCapitalSymbol: {\n                message: \"Пароль должен содержать хотя бы одну заглавную букву\"\n            },\n            isContainDigit: {\n                message: \"Пароль должен содержать хотя бы одно число\"\n            },\n            min: {\n                message: \"Пароль должен состоять минимум из 8 символов\",\n                value: 8\n            }\n        },\n        profession: {\n            isRequired: {\n                message: \"Обязательно выберите вашу профессию\"\n            }\n        },\n        licence: {\n            isRequired: {\n                message:\n                    \"Вы не можете использовать наш сервис без подтверждения лицензионного соглашения\"\n            }\n        }\n    };\n    useEffect(() => {\n        validate();\n    }, [data]);\n    const validate = () => {\n        const errors = validator(data, validatorConfig);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    const isValid = Object.keys(errors).length === 0;\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n        const newData = {\n            ...data,\n            qualities: data.qualities.map((q) => q.value)\n        };\n        dispatch(signUp(newData));\n    };\n    return (\n        <form onSubmit={handleSubmit}>\n            <TextField\n                label=\"Имя\"\n                name=\"name\"\n                value={data.name}\n                onChange={handleChange}\n                error={errors.name}\n            />\n            <TextField\n                label=\"Электронная почта\"\n                name=\"email\"\n                value={data.email}\n                onChange={handleChange}\n                error={errors.email}\n            />\n            <TextField\n                label=\"Пароль\"\n                type=\"password\"\n                name=\"password\"\n                value={data.password}\n                onChange={handleChange}\n                error={errors.password}\n            />\n            <SelectField\n                label=\"Выбери свою профессию\"\n                defaultOption=\"Choose...\"\n                options={professionsList}\n                name=\"profession\"\n                onChange={handleChange}\n                value={data.profession}\n                error={errors.profession}\n            />\n            <RadioField\n                options={[\n                    { name: \"Male\", value: \"male\" },\n                    { name: \"Female\", value: \"female\" },\n                    { name: \"Other\", value: \"other\" }\n                ]}\n                value={data.sex}\n                name=\"sex\"\n                onChange={handleChange}\n                label=\"Выберите ваш пол\"\n            />\n            <MultiSelectField\n                options={qualitiesList}\n                onChange={handleChange}\n                defaultValue={data.qualities}\n                name=\"qualities\"\n                label=\"Выберите ваши качества\"\n            />\n            <CheckBoxField\n                value={data.licence}\n                onChange={handleChange}\n                name=\"licence\"\n                error={errors.licence}\n            >\n                Подтвердить <a>лицензионное соглашение</a>\n            </CheckBoxField>\n            <button\n                className=\"btn btn-primary w-100 mx-auto\"\n                type=\"submit\"\n                disabled={!isValid}\n            >\n                Submit\n            </button>\n        </form>\n    );\n};\n\nexport default RegisterForm;\n","import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport LoginForm from \"../components/ui/loginForm\";\nimport RegisterForm from \"../components/ui/registerForm\";\n\nconst Login = () => {\n    const { type } = useParams();\n    const [formType, setFormType] = useState(\n        type === \"register\" ? type : \"login\"\n    );\n    const toggleFormType = (params) => {\n        setFormType((prevState) =>\n            prevState === \"register\" ? \"login\" : \"register\"\n        );\n    };\n\n    return (\n        <div className=\"container mt-5\">\n            <div className=\"row\">\n                <div className=\"col-md-6 offset-md-3 shadow p-4\">\n                    {formType === \"register\" ? (\n                        <>\n                            <h3 className=\"mb-4\">Register</h3>\n                            <RegisterForm />\n                            <p>\n                                Already have account?{\" \"}\n                                <a\n                                    role=\"button\"\n                                    className={\"alert-danger\"}\n                                    onClick={toggleFormType}\n                                >\n                                    {\" \"}\n                                    Sign In\n                                </a>\n                            </p>\n                        </>\n                    ) : (\n                        <>\n                            <h3 className=\"mb-4\">Login</h3>\n                            <LoginForm />\n                            <p>\n                                Dont have account?{\" \"}\n                                <a\n                                    role=\"button\"\n                                    className={\"alert-danger\"}\n                                    onClick={toggleFormType}\n                                >\n                                    {\" \"}\n                                    Sign Up\n                                </a>\n                            </p>\n                        </>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Login;\n","import { useEffect, useState } from \"react\";\nimport professions from \"../mockData/professions.json\";\nimport qualities from \"../mockData/qualities.json\";\nimport users from \"../mockData/users.json\";\nimport httpService from \"../services/http.service\";\n\nexport const useMockData = () => {\n    const statusConsts = {\n        idle: \"Not Started\",\n        pending: \"In Process\",\n        successed: \"Ready\",\n        error: \"Error occurred\"\n    };\n    const [error, setError] = useState(null);\n    const [status, setStatus] = useState(statusConsts.idle);\n    const [progress, setProgress] = useState(0);\n    const [count, setCount] = useState(0);\n    const summaryCount = professions.length + qualities.length + users.length;\n    const incrementCount = () => {\n        setCount((prevState) => prevState + 1);\n    };\n    const updateProgress = () => {\n        if (count !== 0 && status === statusConsts.idle) {\n            setStatus(statusConsts.pending);\n        }\n        const newProgress = Math.floor((count / summaryCount) * 100);\n        if (progress < newProgress) {\n            setProgress(() => newProgress);\n        }\n        if (newProgress === 100) {\n            setStatus(statusConsts.successed);\n        }\n    };\n\n    useEffect(() => {\n        updateProgress();\n    }, [count]);\n    async function initialize() {\n        try {\n            for (const prof of professions) {\n                await httpService.put(\"profession/\" + prof._id, prof);\n                incrementCount();\n            }\n            for (const user of users) {\n                await httpService.put(\"user/\" + user._id, user);\n                incrementCount();\n            }\n            for (const qual of qualities) {\n                await httpService.put(\"quality/\" + qual._id, qual);\n                incrementCount();\n            }\n        } catch (error) {\n            setError(error);\n            setStatus(statusConsts.error);\n        }\n    }\n\n    return { error, initialize, progress, status };\n};\n","import React from \"react\";\nimport { useMockData } from \"../utils/mockData\";\n\nconst Main = () => {\n    const { error, initialize, progress, status } = useMockData();\n    const handleClick = () => {\n        initialize();\n    };\n    return (\n        <div className=\"container mt-5\">\n            <h1> Main Page</h1>\n            <h3>Инициализация данных в FireBase</h3>\n            <ul>\n                <li>Status: {status}</li>\n                <li>Progress: {progress}%</li>\n                {error && <li>Error: {error}</li>}\n            </ul>\n            <button className=\"btn btn-primary\" onClick={handleClick}>\n                {\" \"}\n                Инициализировать\n            </button>\n        </div>\n    );\n};\n\nexport default Main;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { getCurrentUserData } from \"../../store/users\";\nexport const NavProfile = () => {\n    const currentUser = useSelector(getCurrentUserData());\n    const [isOpen, setOpen] = useState(false);\n    const toggleMenu = () => {\n        setOpen((prevState) => !prevState);\n    };\n    if (!currentUser) return \"loading...\";\n    return (\n        <div className={\"dropdown\"} onClick={toggleMenu}>\n            <div>\n                <div\n                    className={\"btn dropdown-toggle d-flex align-items-center\"}\n                >\n                    <div className={\"me-2\"}>\n                        {currentUser.name}\n                        <img\n                            src={currentUser.image}\n                            className=\"rounded-circle shadow-1-strong me-3\"\n                            alt=\"avatar\"\n                            width=\"65\"\n                            height=\"65\"\n                        />\n                    </div>\n                </div>\n            </div>\n            <div className={\"dropdown-menu w-100\" + (isOpen ? \" show\" : \"\")}>\n                <Link\n                    to={`/users/${currentUser._id}`}\n                    className={\"dropdown-item\"}\n                >\n                    Профиль\n                </Link>\n                <Link to={`/logout`} className={\"dropdown-item\"}>\n                    Выйти\n                </Link>\n            </div>\n        </div>\n    );\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { NavProfile } from \"./navProfile\";\nimport { useSelector } from \"react-redux\";\nimport { getIsLoggedIn } from \"../../store/users\";\n\nconst NavBar = () => {\n    const isLoggedIn = useSelector(getIsLoggedIn());\n    return (\n        <nav className={\"navbar bg-light p-3 mb-3\"}>\n            <div className={\"container-fluid\"}>\n                <ul className=\"nav\">\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link \" aria-current=\"page\" to=\"/\">\n                            Main\n                        </Link>\n                    </li>\n                    {isLoggedIn && (\n                        <li className=\"nav-item\">\n                            <Link\n                                className=\"nav-link \"\n                                aria-current=\"page\"\n                                to=\"/users\"\n                            >\n                                Users\n                            </Link>\n                        </li>\n                    )}\n                </ul>\n                <div className={\"d-flex\"}>\n                    {isLoggedIn ? (\n                        <NavProfile />\n                    ) : (\n                        <Link\n                            className=\"nav-link \"\n                            aria-current=\"page\"\n                            to=\"/login\"\n                        >\n                            Login\n                        </Link>\n                    )}\n                </div>\n            </div>\n        </nav>\n    );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport { getIsLoggedIn } from \"../../store/users\";\n\nexport const ProtectedRoute = ({ component: Component, children, ...rest }) => {\n    const isLoggedIn = useSelector(getIsLoggedIn());\n    return (\n        <Route\n            {...rest}\n            render={(props) => {\n                if (!isLoggedIn) {\n                    return (\n                        <Redirect\n                            to={{\n                                pathname: \"/login\",\n                                state: {\n                                    from: props.location\n                                }\n                            }}\n                        />\n                    );\n                }\n                return Component ? <Component {...props} /> : children;\n            }}\n        />\n    );\n};\n\nProtectedRoute.propTypes = {\n    component: PropTypes.func,\n    location: PropTypes.object,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n};\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { logOut } from \"../store/users\";\nexport const Logout = () => {\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(logOut());\n    }, []);\n    return <h3>loading...</h3>;\n};\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { loadQualitiesList } from \"../store/qualities\";\r\nimport { loadProfessionList } from \"../store/professions\";\r\nimport { getIsLoggedIn, getUsersLoadingStatus, loadUsersList } from \"../store/users\";\r\n\r\nconst AppLoader = ({ children }) => {\r\n    const dispatch = useDispatch();\r\n    const isLoggedIn = useSelector(getIsLoggedIn());\r\n    const usersStatusLoading = useSelector(getUsersLoadingStatus());\r\n    useEffect(() => {\r\n        dispatch(loadQualitiesList());\r\n        dispatch(loadProfessionList());\r\n        if (isLoggedIn) {\r\n            dispatch(loadUsersList());\r\n        }\r\n    }, [isLoggedIn]);\r\n    if (usersStatusLoading) return \"loading...\";\r\n    return children;\r\n};\r\n\r\nAppLoader.propTypes = {\r\n    children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node])\r\n};\r\nexport default AppLoader;\r\n","import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport Users from \"./layouts/users\";\nimport Login from \"./layouts/login\";\nimport Main from \"./layouts/main\";\nimport NavBar from \"./components/ui/navBar\";\nimport { ProtectedRoute } from \"./components/common/protectedRoute\";\nimport { Logout } from \"./layouts/logout\";\nimport AppLoader from \"./hoc/appLoader\";\n\nfunction App() {\n    return (\n        <div>\n            <AppLoader>\n                    <NavBar />\n                    <Switch>\n                        <Route path=\"/\" exact component={Main} />\n                        <ProtectedRoute\n                            path=\"/users/:userId?/:edit?\"\n                            component={Users}\n                        />\n                        <Route path=\"/login/:type?\" component={Login} />\n                        <Route path=\"/logout\" component={Logout} />\n                        <Redirect to=\"/\" />\n                    </Switch>\n            </AppLoader>\n        </div>\n    );\n}\n\nexport default App;\n","import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\r\nimport qualitiesReducer from \"./qualities\";\r\nimport professionReducers from \"./professions\";\r\nimport usersReducer from \"./users\";\r\nimport commentsReducers from \"./comments\";\r\n\r\nconst rootReducer = combineReducers({ qualities: qualitiesReducer, professions: professionReducers, users: usersReducer, comments: commentsReducers });\r\nexport function createStore() {\r\n    return configureStore({\r\n        reducer: rootReducer,\r\n        devTools: process.env.NODE_ENV !== \"production\"\r\n    });\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from \"./app/App\";\nimport { Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"./app/store/createStore\";\nimport history from \"./app/utils/history\";\n\nconst store = createStore();\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={ store }>\n            <Router history={ history }>\n                <App />\n            </Router>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}